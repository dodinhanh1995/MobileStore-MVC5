@model Models.EF.ProductSpecification

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(model => model.Screen, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Screen, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Screen, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.OperatingSystem, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.OperatingSystem, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.OperatingSystem, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CameraAfter, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CameraAfter, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CameraAfter, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CameraBefore, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CameraBefore, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CameraBefore, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CPU, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.CPU, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.CPU, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.RAM, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.RAM, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.RAM, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.InternalMemory, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.InternalMemory, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.InternalMemory, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.SIM, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.SIM, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.SIM, "", new { @class = "text-danger" })
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.PinCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.PinCapacity, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PinCapacity, "", new { @class = "text-danger" })
    </div>
</div>
