@model Models.EF.Slide

@Html.AntiForgeryToken()
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-8">
        @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
    </div>
    <div style="padding:0" class="col-md-2">
        <button class="btn btn-outline btn-primary" type="button" id="browse"><i class="fa fa-link"></i> Choose</button>
    </div>
</div>


<div class="form-group">
    @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.Position, null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.Target, null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        <div class="checkbox">
            @Html.RadioButtonFor(model => model.Status, false) Hide
            @Html.RadioButtonFor(model => model.Status, true) Show
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

